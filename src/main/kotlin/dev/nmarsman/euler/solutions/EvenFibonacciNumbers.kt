package dev.nmarsman.euler.solutions

import dev.nmarsman.euler.Solution
import dev.nmarsman.euler.utils.Utils

object EvenFibonacciNumbers: Solution
{
    override val identifier: Int = 2
    override val title: String = "Even Fibonacci numbers"

    override val description: String
        = "Each new term in the Fibonacci sequence is generated by adding the previous two terms. " +
          "By starting with 1 and 2, the first 10 terms will be:\n\n" +
          "1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...\n\n" +
          "By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms."

    override fun invoke(): Int
        = Utils.fibonacci()
            .takeWhile { it < 4000000 }
            .filter { it % 2 == 0 }
            .sum()
}

fun main() = Solution.run(EvenFibonacciNumbers::class)